/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        space_enter {
            bindings = <&kp ENTER>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q               &kp W           &kp E               &kp R      &kp T                   &kp Y                  &kp U                &kp I                &kp O            &kp P                       &kp BSPC
&kp LCTRL  &mt LEFT_COMMAND A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &lt 2 F    &kp G                   &kp H                  &lt 1 J              &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SINGLE_QUOTE  &kp SQT
&kp LSHFT  &kp Z               &kp X           &kp C               &kp V      &kp B                   &kp N                  &kp M                &kp COMMA            &kp DOT          &kp FSLH                    &kp ESC
                                               &kp TAB             &lt 4 ESC  &mt LEFT_SHIFT SPACE    &mt RIGHT_SHIFT SPACE  &lt 3 RIGHT_BRACKET  &kp BACKSLASH
            >;
        };

        nums {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans  &trans  &trans  &sys_reset  &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &trans  &trans  &trans  &trans      &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans  &trans  &trans  &trans      &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans  &trans  &trans
            >;
        };

        raise {
            bindings = <
&trans  &sys_reset  &trans  &trans  &trans  &trans     &trans    &trans    &kp UP    &trans     &kp BACKSPACE  &trans
&trans  &trans      &trans  &trans  &trans  &trans     &kp CAPS  &kp LEFT  &kp DOWN  &kp RIGHT  &kp SEMI       &trans
&trans  &trans      &trans  &trans  &trans  &trans     &trans    &trans    &trans    &trans     &trans         &trans
                            &trans  &trans  &kp ESC    &kp TAB   &trans    &trans
            >;
        };

        sym {
            bindings = <
&trans  &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)     &trans  &trans  &trans  &trans  &trans  &trans
                                     &kp LS(LPAR)   &kp LS(RPAR)   &kp LS(UNDER)    &trans  &trans  &trans
            >;
        };

        func {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
